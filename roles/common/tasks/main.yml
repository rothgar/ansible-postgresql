---
# tasks file for postgresql

- name: Install libselinux if needed
  yum: name=libselinux-python state=present
  when: ansible_selinux == True

- name: Remove existing PostgreSQL repos
  file: path=/etc/yum.repos.d/pgdg-*.repo state=absent
  when: ansible_pkg_mgr == 'yum'

- name: Add PostgreSQL repo
  template: src={{ ansible_distribution }}.repo
    dest=/etc/yum.repos.d/pgdg-{{ postgresql_version|replace('.', '') }}-{{ ansible_distribution|lower() }}.repo
    mode=0644 owner=root group=root
  when: ansible_pkg_mgr == 'yum'

- name: Remove old GPG keys
  file: path=/etc/pki/rpm-gpg/RPM-GPG-KEY-PGDG-* state=absent
  when: ansible_pkg_mgr == 'yum'

- name: Add GPG key
  copy: src=RPM-GPG-KEY-PGDG-{{ postgresql_version|replace('.','') }}
    dest=/etc/pki/rpm-gpg/RPM-GPG-KEY-PGDG-{{ postgresql_version|replace('.','') }}
    mode=0644 owner=root group=root
  when: ansible_pkg_mgr == 'yum'

- name: Install PostgreSQL Server
  yum: name=postgresql{{ postgresql_version|replace('.', '') }}-server state=present
    #conf_file=/etc/yum.repos.d/pgdg-{{ postgresql_version|replace('.', '') }}-{{ ansible_distribution|lower() }}.repo
  when: ansible_pkg_mgr == 'yum'

- name: Initiate database
  command: service postgresql initdb
    creates=/var/lib/pgsql/data/postgresql.conf

- name: Start PostgreSQL and enable at boot
  service: name=postgresql
    enabled=yes
    state=started

- name: Ensure PostgreSQL is listening on all localhost
  lineinfile: dest=/var/lib/pgsql/data/postgresql.conf
    regexp='^#?listen_addresses\s*='
    line="listen_addresses = '127.0.0.1'"
    state=present
  notify: restart postgresql

- lineinfile: dest=/var/lib/pgsql/data/pg_hba.conf
    regexp='host\s+all\s+all\s+127.0.0.1/32\s+md5'
    line='host all all 127.0.0.1/32 md5'
    insertbefore=BOF
  notify: restart postgresql